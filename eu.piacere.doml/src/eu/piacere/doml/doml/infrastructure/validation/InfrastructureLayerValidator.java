/**
 *
 * $Id$
 */
package eu.piacere.doml.doml.infrastructure.validation;

import eu.piacere.doml.doml.commons.Credentials;

import eu.piacere.doml.doml.infrastructure.ComputingGroup;
import eu.piacere.doml.doml.infrastructure.ComputingNode;
import eu.piacere.doml.doml.infrastructure.ComputingNodeGenerator;
import eu.piacere.doml.doml.infrastructure.ExecutionEnvironment;
import eu.piacere.doml.doml.infrastructure.FunctionAsAService;
import eu.piacere.doml.doml.infrastructure.MonitoringRule;
import eu.piacere.doml.doml.infrastructure.Network;
import eu.piacere.doml.doml.infrastructure.SecurityGroup;
import eu.piacere.doml.doml.infrastructure.Storage;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link eu.piacere.doml.doml.infrastructure.InfrastructureLayer}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface InfrastructureLayerValidator {
	boolean validate();

	boolean validateNodes(EList<ComputingNode> value);
	boolean validateGenerators(EList<ComputingNodeGenerator> value);
	boolean validateStorages(EList<Storage> value);
	boolean validateFaas(EList<FunctionAsAService> value);
	boolean validateCredentials(EList<Credentials> value);
	boolean validateExecutionEnvironments(EList<ExecutionEnvironment> value);

	boolean validateGroups(EList<ComputingGroup> value);
	boolean validateSecurityGroups(EList<SecurityGroup> value);
	boolean validateNetworks(EList<Network> value);
	boolean validateRules(EList<MonitoringRule> value);
}
