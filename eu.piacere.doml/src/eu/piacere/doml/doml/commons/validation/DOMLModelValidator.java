/**
 *
 * $Id$
 */
package eu.piacere.doml.doml.commons.validation;

import eu.piacere.doml.doml.application.ApplicationLayer;

import eu.piacere.doml.doml.commons.Configuration;
import eu.piacere.doml.doml.commons.Requirement;

import eu.piacere.doml.doml.concrete.ConcreteInfrastructure;

import eu.piacere.doml.doml.infrastructure.InfrastructureLayer;

import eu.piacere.doml.doml.optimization.OptimizationLayer;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link eu.piacere.doml.doml.commons.DOMLModel}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DOMLModelValidator {
	boolean validate();

	boolean validateVersion(String value);
	boolean validateApplication(ApplicationLayer value);
	boolean validateInfrastructure(InfrastructureLayer value);
	boolean validateConcretizations(EList<ConcreteInfrastructure> value);
	boolean validateOptimization(OptimizationLayer value);
	boolean validateConfigurations(EList<Configuration> value);
	boolean validateActiveConfiguration(Configuration value);
	boolean validateActiveInfrastructure(ConcreteInfrastructure value);
	boolean validateFunctionalRequirements(EList<Requirement> value);
}
